# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu e3]
canbus_uuid: 296c6b0da245


[extruder1]
step_pin: e3:PD0
dir_pin: e3:PD1
enable_pin: !e3:PD2
microsteps: 16
rotation_distance: 34.433 # 34.777
gear_ratio: 7.5:1                                                   # For Orbiter V2
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: e3:PB13
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: e3:PA3
control: pid
pid_Kp=32.340 
pid_Ki=4.312 
pid_Kd=60.639
min_temp: 0
max_temp: 300
min_extrude_temp: 180
pressure_advance: 0.035                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040


[tmc2209 extruder1]
uart_pin: e3:PA15
run_current: 0.550
stealthchop_threshold: 999999

[fan T1_partfan]
pin: e3:PA0

[heater_fan T1_hotend_fan]
pin: e3:PA1
heater: extruder1
heater_temp: 50.0


# [adxl345]
# cs_pin: e3:PB12
# spi_software_sclk_pin: e3:PB10
# spi_software_mosi_pin: e3:PB11
# spi_software_miso_pin: e3:PB2
# axes_map: z,-y,x


[tool T1]
 tool_number: 1
 extruder: extruder1
 fan: fan T1_partfan
 gcode_x_offset: -0.200000
 gcode_y_offset: 1.455000
 gcode_z_offset: 0.474500
 params_park_x: 261.70
 params_park_y: -8.4
 params_park_z: 308
 params_type: 'lite-mini'

[tool_probe T1]
pin: e3:PB6
tool: 1
z_offset: -0.933
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder1.temperature %}
    {% set TARGET_TEMP = printer.extruder1.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder1 MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
